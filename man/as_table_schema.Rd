% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema_utils.R
\name{as_table_schema}
\alias{as_table_schema}
\title{Transform table data to target schema for Synapse storage}
\usage{
as_table_schema(df, schema, list_truncate = FALSE)
}
\arguments{
\item{df}{A table, i.e. \code{data.frame}.}

\item{schema}{Table \href{https://python-docs.synapse.org/build/html/Entity.html#synapseclient.table.Schema}{schema object} or
Synapse id of target table from which to get schema.}

\item{list_truncate}{If length exceeds schema max for list columns, set \code{TRUE} to allow data truncation, \code{FALSE} to error only (default).}
}
\value{
Synapse Table object ready for storing.
}
\description{
\strong{Currently implements list-schema features first and will do more later.}
Check and encode data values to expectations of Synapse target table schema for storage.
The target schema is more likely from an existing table, since new tables can take advantage of \code{build_table}.
To get compatible list data, does JSON encoding and optionally \code{list_truncate} when running into length limits.
If truncation is not OK, then the incompatibility will have to be resolved by updating schema outside of this.
Note that the setting applies to ALL list columns, though it would be desirable to be column-specific.
}
